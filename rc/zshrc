source ~/.antigen/antigen.zsh
source ~/dotfiles/sourced/aliases
source ~/dotfiles/sourced/functions
source ~/dotfiles/sourced/exports


#if [[ -v ZSH_PROF ]]; then
#  zmodload zsh/zprof
#fi
# Load the oh-my-zsh's library.

antigen use oh-my-zsh
antigen bundle robbyrussell/oh-my-zsh lib/

# Bundles from the default repo (robbyrussell's oh-my-zsh).
antigen bundle archlinux
antigen bundle ascii-soup/zsh-url-highlighter
antigen bundle b4b4r07/emoji-cli
antigen bundle bric3/nice-exit-code
antigen bundle catimg
antigen bundle changyuheng/fz
antigen bundle command-not-found
antigen bundle desyncr/auto-ls
antigen bundle lukechilds/zsh-nvm
antigen bundle dirhistory
antigen bundle djui/alias-tips
antigen bundle docker
antigen bundle docker-compose
antigen bundle extract
antigen bundle git
antigen bundle git-extras
antigen bundle git-flow
antigen bundle gpg-agent
antigen bundle greymd/tmux-xpanes
antigen bundle horosgrisa/mysql-colorize
antigen bundle httpie
antigen bundle jreese/zsh-titles
antigen bundle kubectl
antigen bundle minikube
antigen bundle lein
antigen bundle lukechilds/zsh-better-npm-completion
antigen bundle man
antigen bundle MichaelAquilina/zsh-emojis
antigen bundle nyan
antigen bundle pip
antigen bundle psprint/history-search-multi-word
antigen bundle pyenv
antigen bundle python
antigen bundle rupa/z
antigen bundle sudo
antigen bundle systemd
antigen bundle thewtex/tmux-mem-cpu-load
antigen bundle tmux
antigen bundle unixorn/autoupdate-antigen.zshplugin
antigen bundle virtualenv
antigen bundle zdharma/fast-syntax-highlighting
antigen bundle zdharma/zsh-diff-so-fancy
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-completions
antigen bundle zuxfoucault/colored-man-pages_mod
antigen theme gnzh

# Tell Antigen that you're done.
antigen apply



if [[ $(find ~/dotfiles/motd.lol -mmin +2 -print) ]]; then
  script -q -c "lolcat --spread 0.8 -F 0.4 ~/dotfiles/motd" > ~/dotfiles/motd.lol && rm typescript
fi

cat  ~/dotfiles/motd.lol

export GPG_TTY="$(tty)"
export SSH_AUTH_SOCK="/run/user/$UID/gnupg/S.gpg-agent.ssh"
gpg-connect-agent updatestartuptty /bye

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
###-begin-pm2-completion-###
### credits to npm for the completion file model
#
# Installation: pm2 completion >> ~/.bashrc  (or ~/.zshrc)
#

COMP_WORDBREAKS=${COMP_WORDBREAKS/=/}
COMP_WORDBREAKS=${COMP_WORDBREAKS/@/}
export COMP_WORDBREAKS

if type complete &>/dev/null; then
  _pm2_completion () {
    local si="$IFS"
    IFS=$'\n' COMPREPLY=($(COMP_CWORD="$COMP_CWORD" \
                           COMP_LINE="$COMP_LINE" \
                           COMP_POINT="$COMP_POINT" \
                           pm2 completion -- "${COMP_WORDS[@]}" \
                           2>/dev/null)) || return $?
    IFS="$si"
  }
  complete -o default -F _pm2_completion pm2
elif type compctl &>/dev/null; then
  _pm2_completion () {
    local cword line point words si
    read -Ac words
    read -cn cword
    let cword-=1
    read -l line
    read -ln point
    si="$IFS"
    IFS=$'\n' reply=($(COMP_CWORD="$cword" \
                       COMP_LINE="$line" \
                       COMP_POINT="$point" \
                       pm2 completion -- "${words[@]}" \
                       2>/dev/null)) || return $?
    IFS="$si"
  }
  compctl -K _pm2_completion + -f + pm2
fi
###-end-pm2-completion-###
